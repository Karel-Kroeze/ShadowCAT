// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// PROB_3PLM
List PROB_3PLM(NumericVector theta, NumericMatrix a, NumericVector b, NumericVector c, NumericVector u, bool deriv);
RcppExport SEXP _ShadowCAT_PROB_3PLM(SEXP thetaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP uSEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< bool >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(PROB_3PLM(theta, a, b, c, u, deriv));
    return rcpp_result_gen;
END_RCPP
}
// PROB_GRM
List PROB_GRM(NumericVector theta, NumericMatrix a, NumericMatrix b, NumericVector u, bool deriv);
RcppExport SEXP _ShadowCAT_PROB_GRM(SEXP thetaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP uSEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< bool >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(PROB_GRM(theta, a, b, u, deriv));
    return rcpp_result_gen;
END_RCPP
}
// PROB_SM
List PROB_SM(NumericVector theta, NumericMatrix a, NumericMatrix b, NumericVector u, bool deriv);
RcppExport SEXP _ShadowCAT_PROB_SM(SEXP thetaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP uSEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< bool >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(PROB_SM(theta, a, b, u, deriv));
    return rcpp_result_gen;
END_RCPP
}
// PROB_GPCM
List PROB_GPCM(NumericVector theta, NumericMatrix a, NumericMatrix b, NumericVector u, bool deriv);
RcppExport SEXP _ShadowCAT_PROB_GPCM(SEXP thetaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP uSEXP, SEXP derivSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< bool >::type deriv(derivSEXP);
    rcpp_result_gen = Rcpp::wrap(PROB_GPCM(theta, a, b, u, deriv));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP ShadowCAT_PROB_3PLM(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP ShadowCAT_PROB_GPCM(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP ShadowCAT_PROB_GRM(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP ShadowCAT_PROB_SM(SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_ShadowCAT_PROB_3PLM", (DL_FUNC) &_ShadowCAT_PROB_3PLM, 6},
    {"_ShadowCAT_PROB_GRM", (DL_FUNC) &_ShadowCAT_PROB_GRM, 5},
    {"_ShadowCAT_PROB_SM", (DL_FUNC) &_ShadowCAT_PROB_SM, 5},
    {"_ShadowCAT_PROB_GPCM", (DL_FUNC) &_ShadowCAT_PROB_GPCM, 5},
    {"ShadowCAT_PROB_3PLM", (DL_FUNC) &ShadowCAT_PROB_3PLM, 6},
    {"ShadowCAT_PROB_GPCM", (DL_FUNC) &ShadowCAT_PROB_GPCM, 5},
    {"ShadowCAT_PROB_GRM",  (DL_FUNC) &ShadowCAT_PROB_GRM,  5},
    {"ShadowCAT_PROB_SM",   (DL_FUNC) &ShadowCAT_PROB_SM,   5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ShadowCAT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
