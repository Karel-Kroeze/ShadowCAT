% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints_lp_format.R
\name{constraints_lp_format}
\alias{constraints_lp_format}
\title{Format characteristics and constraints}
\usage{
constraints_lp_format(max_n, number_items, characteristics = NULL,
  constraints = NULL)
}
\arguments{
\item{max_n}{Test length at which testing should stop.}

\item{number_items}{Number of items available in the item bank.}

\item{characteristics}{Data frame with characteristics, see \code{details}.}

\item{constraints}{List of constraints, see \code{details}.}
}
\value{
List containing characteristics and constraints in lp format; 
the maximum test length is always included as an additional constraint; see \code{details}.
}
\description{
Get a list with characteristics and constraints which can be used in \code{lp} function from \code{lpSolve} package.
}
\section{Characteristics specification}{

\code{characteristics} should be specified as a data frame of characteristics. Each row indicates the characteristics of
one item. Each column indicates how all items score on a certain characteristic. Characteristics may be categorical or numeric.
}

\section{Constraint specification}{

\code{constraints} should be specified as a list of constraints, each constraint is a list with three named values:
\describe{
\item{\code{name}}{The column name of the characteristic this constraint applies to. For categorical characteristics the level should be specified as \code{name/value},
where \code{name} is the column name of the characteristic and \code{value} is the specific level of the characteristic this constraint applies to.} 
\item{\code{op}}{The logical operator to be used. Valid options are \code{"<"}, \code{"="}, \code{">"} and \code{"><"}.}
\item{\code{target}}{The target value, numeric. For categorical characteristics, it indicates the number of items of the relevant characteristic that should be administered (\code{"="}), or
minimally (\code{">"}), maximally (\code{"<"}), or minimally and maximally (\code{"><"}; vector with two values required) administered. For numeric characteristics,
it indicates the minimum and/or maximum sum allowed over all administered items, e.g., maximum time allowed.}
}
}

\section{Return object}{

The constraints and characteristics in lp format will be stored within a list. Setting the constraints and characteristics
arguments to NULL results in a list with only the test length constraint.
Constraints in Shadow Tests are implemented through linear programming, for which the package lpSolve is used. 
The returned constraints object is a list with two named elements; lp_constraints and lp_chars. The lp_constraints 
and lp_chars are set up to work with lpSolve, and should not be manually edited.
}

\section{Note about length}{

Note that the maximum test length is always included as an additional constraint.
}
\examples{
max_n <- 30
number_items <- 50

# set up some dummy characteristics.
content <- sample(c('algebra','physics','calculus'), number_items, TRUE)
time <- runif(number_items)
exclusive <- rep(0, number_items)
exclusive[sample(number_items, 4)] <- 1

# bind them in a data.fame
characteristics <- data.frame(content, time, exclusive)

# set up the constraints
constraints <- list(
  list(name = 'content/algebra',
       op = '><',
       target = c(5,10)),
  list(name = 'content/physics',
       op = '><',
       target = c(2,5)),
  list(name = 'time',
       op = '<',
       target = 20),
  list(name = 'exclusive',
       op = '<',
       target = 2))

# get list of characteristics and constraintrs in lp format
ShadowCAT:::constraints_lp_format(max_n = max_n, number_items = number_items, characteristics = characteristics, constraints = constraints)

}

