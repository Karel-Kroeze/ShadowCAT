% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shadowcat_roqua.R
\name{shadowcat_roqua}
\alias{shadowcat_roqua}
\title{Returns a list with the key of the next item to be administered given a new response,
an updated estimate of theta, and the responses to the administered items}
\usage{
shadowcat_roqua(responses, estimate, model, alpha, beta, start_items, stop_test,
  estimator, information_summary, prior = NULL, guessing = NULL,
  eta = NULL, constraints_and_characts = NULL, lower_bound = rep(-3,
  ncol(alpha)), upper_bound = rep(3, ncol(alpha)), prior_var_safe_ml = NULL)
}
\arguments{
\item{responses}{named list of previous responses and new response, with names being the item keys; should be initialized with NULL}

\item{estimate}{estimate of latent trait theta, with covariance matrix as its attribute}

\item{model}{String, one of '3PLM', 'GPCM', 'SM' or 'GRM', for the three-parameter logistic, generalized partial credit, sequential or graded response model respectively.}

\item{alpha}{Matrix of alpha parameters, one column per dimension, one row per item. Row names should contain the item keys. Note that so called within-dimensional models still use an alpha matrix, they simply 
have only one non-zero loading per item.}

\item{beta}{Matrix of beta parameters, one column per item step, one row per item. Row names should contain the item keys. Note that ShadowCAT expects response categories to be sequential,
and without gaps. That is, the weight parameter in the GPCM model is assumed to be sequential, and equal to the position of the 'location' of the beta parameter in the Beta matrix.
The matrix will have a number of columns equal to the largest number of response categories, items with fewer response categories should be 
right-padded with \code{NA}. \code{NA} values between response categories are not allowed, and will lead to errors.
Beta matrix can be set to NULL if model is GPCM and eta is defined
More flexibility in Beta parameters might be added in future versions.}

\item{start_items}{items that are shown to the patient before adaptive proces starts; one of
list(type = 'random', n)
list(type = 'fixed', indeces, n)
list(type = 'random_by_dimension', n_by_dimension, n)
where n = total number of initial items, indeces = vector of initial item indeces, 
n_by_dimension = scalar of number of initial items per dimension, or vector with number of initial items for each dimension
If n is 0, only n needs to be defined
'random_by_dimension' assumes between models, if any item has a non-zero loading on a dimension, it is considered to be part of that dimension.}

\item{stop_test}{rule for when to stop providing new items to patient; should be a list of the form
list(target = ..., max_n = ..., min_n = ..., cutoffs = ...), 
where max_n = test length at which testing should stop (even if target has not been reached yet in case of variance stopping rule), 
target = vector of maximum acceptable variances per dimension; if target = NULL, only max_n is taken into account,
min_n = minimum test length; NULL means no mimimum test length,
cutoffs = matrix containing cut off values per dimension (columns) and test iteration (rows). First row contains cut off values for when no items have been
administered yet, second row for when one item has been administered, etc. If estimate + 3SE < cutoff for each dimension at certain iteration, test stops; 
NULL means no cut off values}

\item{estimator}{type of estimator to be used, one of "maximum_aposteriori", "maximum_likelihood", or "expected_aposteriori"}

\item{information_summary}{called "objective" by Kroeze; how to summarize information; one of
"determinant": compute determinant(info_sofar_QxQ + info_QxQ_k) for each yet available item k
"posterior_determinant": compute determinant(info_sofar_QxQ_plus_prior + info_QxQ_k) for each yet available item k
"trace": compute trace((info_sofar_QxQ + info_QxQ_k) for each yet available item k
"posterior_trace": compute trace(info_sofar_QxQ_plus_prior + info_QxQ_k) for each yet available item k
"posterior_expected_kullback_leibler" = compute Posterior expected Kullback-Leibler Information}

\item{prior}{covariance matrix of the (multi variate) normal prior for theta; mean vector is fixed at zero; not used for maximum likelihood estimator
#' note that this prior should be a square matrix with number of rows and columns equal to the number of dimensions; values on the diagonal should be larger than 0}

\item{guessing}{matrix with one column of guessing parameters per item. Row names should contain the item keys. Optionally used in 3PLM model, ignored for all others.}

\item{eta}{Matrix of location parameters, optionally used in GPCM model, ignored for all others. Row names should contain the item keys.}

\item{constraints_and_characts}{list with constraints and characteristics; NULL means no constraints
constraints should be specified as a list of constraints, each constraint is a list with three named values;
name: the column name of the characteristic this constraint applies to. For categorical characteristics the level should be specified as name/value.
op: the logical operator to be used. Valid options are "<", "=", ">" and "><".
target: the target value, numeric. If the operator is "><", this should be a length two vector in between which the target should fall.
characteristics should be a data.frame with characteristics, one row per item, one column per characteristic. Row names should contain the item keys.
See constraints_lp_format() for details}

\item{lower_bound}{vector with lower bounds for theta per dimension; estimated theta values smaller than the lowerbound values are truncated to the lowerbound values}

\item{upper_bound}{vector with upper bounds for theta per dimension; estimated theta values larger than the upperbound values are truncated to the upperbound values}

\item{prior_var_safe_ml}{if not NULL, expected a posteriori estimate with prior variance equal to prior_var_safe_ml (scalar or vector) is computed instead of maximum likelihood/maximum a posteriori, if maximum likelihood/maximum a posteriori estimate fails}
}
\value{
a list containing the key of the next item to be administered given a new response (or "stop_test"), 
updated estimate of theta, and the responses to the administered items (named list)
}
\description{
Returns a list with the key of the next item to be administered given a new response,
an updated estimate of theta, and the responses to the administered items
}

