% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ShadowCAT.R
\name{shadowcat_roqua}
\alias{shadowcat_roqua}
\title{Returns a list with the index of the next item to be administered given a new response, and an updated person object}
\usage{
shadowcat_roqua(new_response, prior, model, alpha, beta, guessing = NULL,
  eta = NULL, start_items, stop_test, estimator, information_summary,
  item_selection = "MI", constraints = NULL, lowerbound = rep(-3,
  ncol(alpha)), upperbound = rep(3, ncol(alpha)), prior_var_safe_ml = NULL)
}
\arguments{
\item{new_response}{new response from respondent, should be initialized with NULL}

\item{prior}{covariance matrix of the multi variate normal prior for theta; mean vector is fixed at zero; only used when estimator type is MAP or EAP, but at this point should always be defined
#' note that this prior should be a square matrix with number of rows and columns equal to the number of dimensions; values on the diagonal should be larger than 1}

\item{model}{String, one of '3PLM', 'GPCM', 'SM' or 'GRM', for the three-parameter logistic, generalized partial credit, sequential or graded response model respectively.}

\item{alpha}{Matrix of alpha paramteres, one column per dimension, one row per item. Note that so called within-dimensional models still use an alpha matrix, they simply 
have only one non-zero loading per item.}

\item{beta}{Matrix of beta parameters, one column per item step, one row per item. Note that ShadowCAT expects response categories to be sequential,
and without gaps. That is, the weight parameter in the GPCM model is assumed to be sequential, and equal to the position of the 'location' of the beta parameter in the Beta matrix.
The matrix will have a number of columns equal to the largest number of response categories, items with fewer response categories should be 
right-padded with \code{NA}. \code{NA} values between response categories are not allowed, and will lead to errors.
More flexibility in Beta parameters might be added in future versions.}

\item{guessing}{vector of guessing parameters per item. Optionally used in 3PLM model, ignored for all others.}

\item{eta}{Matrix of location parameters, optionally used in GPCM model, ignored for all others.}

\item{start_items}{items that are shown to the patient before adaptive proces starts; one of
list(type = 'random', n)
list(type = 'fixed', indices, n)
list(type = 'randomByDimension', nByDimension, n)
where n = total number of initial items, indices = vector of initial item indeces, 
nByDimension = scalar of number of initial items per dimension, or vector with number of initial items for each dimension}

\item{stop_test}{rule for when to stop providing new items to patient; one of
list(type = 'length', n = ...);
list(type = 'variance', target = ..., n = ...)
where n = test length at which testing should stop (even if target has not been reached yet in case of variance stopping rule), 
target = vector of maximum acceptable variances per dimension}

\item{estimator}{type of estimator to be used, one of "MAP" (Maximum a posteriori estimation), "EAP" (Expected A Posteriori Estimation), or "ML" (maximum likelihood)}

\item{information_summary}{called "objective" by Kroeze; how to summarize information; one of
"D" = determinant: compute determinant(info_sofar_QxQ + info_QxQ_k) for each yet available item k
"PD" = posterior determinant: compute determinant(info_sofar_QxQ_plus_prior + info_QxQ_k) for each yet available item k
"A" = trace: compute trace((info_sofar_QxQ + info_QxQ_k) for each yet available item k
"PA" = posterior trace: compute trace(info_sofar_QxQ_plus_prior + info_QxQ_k) for each yet available item k
"PEKL" = compute Posterior expected Kullback-Leibler Information}

\item{item_selection}{selection criterion; one of "MI" (maximum information) or "Shadow" (maximum information and take constraints into account)}

\item{constraints}{list with constraints and characteristics
constraints should be specified as a list of constraints, each constraint is a list with three named values;
name: the column name of the characteristic this constraint applies to. For categorical characteristics the level should be specified as name/value.
op: the logical operator to be used. Valid options are "<", "=", ">" and "><".
target: the target value, numeric. If the operator is "><", this should be a length two vector in between which the target should fall.
characteristics should be a data.frame with characteristics, one row per item, one column per characteristic.
See constraints_correct_format() for details}

\item{lowerbound}{vector with lower bounds for theta per dimension; estimated theta values smaller than the lowerbound values are truncated to the lowerbound values}

\item{upperbound}{vector with upper bounds for theta per dimension; estimated theta values larger than the upperbound values are truncated to the upperbound values}

\item{prior_var_safe_ml}{if not NULL, MAP estimate with prior variance equal to prior_var_safe_ml is computed instead of ML, if ML estimate fails}
}
\value{
a list with the index of the next item to be administered given a new response (or "stop_test"), and an updated person object
}
\description{
Returns a list with the index of the next item to be administered given a new response, and an updated person object
}

