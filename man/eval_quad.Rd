% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_latent_trait.R
\name{eval_quad}
\alias{eval_quad}
\title{get expected aposteriori estmate and variance using Gauss-Hermite quadrature}
\usage{
eval_quad(FUN = function(x) 1, X = NULL, ..., W = NULL)
}
\arguments{
\item{FUN}{log likelihood function of the parameters to be estimated}

\item{X}{matrix of quadrature points as returned by init_quad(), or list of 
quadrature points and weights as returned by init_quad()}

\item{...}{Additional arguments passed on to FUN}

\item{W}{vector of weights as returned by init_quad, or NULL if weights are included in X}
}
\value{
A vector with the evaluated integrals, with attribute variance containing the (co)variance (matrix) of the estimate(s)
}
\description{
get expected aposteriori estmate and variance using Gauss-Hermite quadrature
}
\examples{
grid_points_and_weights1 <- init_quad(Q = 1, prior = list(mu = rep(0, 1), Sigma = diag(1)*2), adapt = list(mu = rep(1, 1), Sigma = diag(1)*5), ip = 50)
estimate1 <- eval_quad(FUN = dnorm, X = grid_points_and_weights1, mean = 1.5, sd = 3, log = TRUE)
round(estimate1, 3) ==  .273 || stop("wrong")
round(attr(estimate1, "variance"), 3) == 1.636 || stop("wrong")
grid_points_and_weights2 <- init_quad(Q = 2, prior = list(mu = rep(0, 2), Sigma = diag(2)*2), adapt = list(mu = rep(1, 2), Sigma = (matrix(rep(2, 4), ncol = 2) + diag(2)*5)), ip = 20)
estimate2 <- eval_quad(FUN = mvtnorm::dmvnorm, X = grid_points_and_weights2, mean = c(1.5, -1), sigma = matrix(c(2, .3, .3, 2), ncol = 2), log = TRUE)
all(round(estimate2, 3) ==  c(.811, -.537)) || stop("wrong")
all(round(attr(estimate2, "variance"), 3) ==  matrix(c(.926, .017, .017,.926), ncol = 2)) || stop("wrong")
}

